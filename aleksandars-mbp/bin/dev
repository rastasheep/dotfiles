#!/usr/bin/env bash
#
# Easily jump into repo if exists localy, or provided repo will be cloned
# $SRC=~/src
#
# USAGE:
#
#  $ dev
#   # => interactive repo list from $SRC or provide git ssh url
#
#  $ dev my-project
#   # => cd into $SRC/git-host.com/me/my-project
#
#  $ dev git@git-host.com:me/my-project.git
#   # => clone into $SRC/git-host.com/me/my-project

src=$HOME/src
src_depth=3

fzf_args=(
  --print-query
)

if [ "$1" ]; then
    fzf_args+=(-f "$1")
    fzf_args+=(-e)
fi

fzf_query=$(find "$src" -maxdepth "$src_depth" -mindepth "$src_depth" -type d | sed -e "s#^$src/##" | fzf "${fzf_args[@]}")
match=$?
query="$(echo "$fzf_query" | tail -n 1)"
destination="$(echo "$query" | sed -e 's#^.*@##' -e 's#\.git$##' | tr ':' '/' | tr '[:upper:]' '[:lower:]')"

case "$match" in
0)
    cd "$src"/"$destination" || exit
    ;;
1)
    if [[ "$query" =~ ".git" && "$query" =~ "@" ]];
    then
        echo "Creating '$src/$destination'"
        mkdir -p "$src"/"$destination"
        cd "$src"/"$destination" || exit
        git clone "$query" .
    else
        echo "'$query' is not a valid git ssh url"
        return 1
    fi
    ;;
esac
